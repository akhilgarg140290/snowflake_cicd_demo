name: Execute SQL Scripts in Snowflake

on:
  push:
    branches:
      - dev
      - main
jobs:
  deploy-sql:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install snowflake-connector-python
      - name: Set Environment Variables
        id: setenv
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "BRANCH_SUFFIX=_PROD" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "dev" ]]; then
            echo "BRANCH_SUFFIX=_DEV" >> $GITHUB_ENV
          else
            echo "BRANCH_SUFFIX=" >> $GITHUB_ENV
          fi
      - name: Execute SQL Scripts in dev/ Folder
        env:
          SNOWFLAKE_USER: ${{ vars.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ vars.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ vars.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_ROLE: ${{ vars.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ vars.SNOWFLAKE_WH }}
          SNOWFLAKE_DATABASE: ${{ vars.SNOWFLAKE_DB }}${{ env.BRANCH_SUFFIX }}
          SNOWFLAKE_SCHEMA: ${{ vars.SNOWFLAKE_SCHEMA }}
        run: |
          echo "Running SQL scripts from dev folder..."
          python -c "

          import os
          import snowflake.connector

          conn = snowflake.connector.connect(
              user=os.environ['SNOWFLAKE_USER'],
              password=os.environ['SNOWFLAKE_PASSWORD'],
              account=os.environ['SNOWFLAKE_ACCOUNT'],
              warehouse=os.environ['SNOWFLAKE_WAREHOUSE'],
              database=os.environ['SNOWFLAKE_DATABASE'],
              schema=os.environ['SNOWFLAKE_SCHEMA']
          )

          cursor = conn.cursor()

          script_files = [
              'dev/create_tables.sql',
              'dev/stage_sales_data.sql',
              'dev/transform_sales_data.sql'
          ]

          for script in script_files:
              print(f'ðŸ”¹ Executing {script}...')
              with open(script, 'r') as file:
                  sql_commands = file.read()
                  for command in sql_commands.strip().split(';'):
                      if command.strip():
                          cursor.execute(command)
                          print(f'âœ… Ran: {command[:60]}...')

          cursor.close()
          conn.close()
          print('ðŸŽ‰ All SQL scripts executed successfully.') 
          "
          
